preDir #include <stdio.h>
dt int
id main
rLP (
rRP )
cLP {
dt float
id a
binaryOp =
number 2.1E-12
delim ,
id b
binaryOp =
number 1
delim ;
dt char
id s
sLP [
number 10
sRP ]
binaryOp =
string "Compiler"
delim ;
dt char
id chr
binaryOp =
charLit 'a'
delim ;
reserved if
rLP (
id a
relOp <=
rLP (
id b
bitShift <<
number 1
rRP )
logicalOp &&
Illegal identifier <1A1> at line no. 8
rRP )
cLP {
lineComment //This is a line comment
id printf
rLP (
string "This is a string spanning multiple lines"
rRP )
delim ;
blockComment /*		This is a block comment		It has two closing quotes. The nearest one will terminate the comment.		*/
binaryOp *
binaryOp /
string "this string has illegal symbols @#$$$ but they are not Illegal!"
string "string has \" escaped quotes"
delim ;
cRP }
reserved return
number 0
delim ;
cRP }
Illegal character <@> at line no. 28
Illegal character <`> at line no. 28
---------------------------------------

 SYMBOL TABLE

"Compiler"	string
"This is a string spanning multiple lines"	string
"string has \" escaped quotes"	string
"this string has illegal symbols @#$$$ but they are not Illegal!"	string
#include <stdio.h>	preDir
&&	logicalOp
'a'	charLit
(	rLP
)	rRP
*	binaryOp
,	delim
/	binaryOp
/*		This is a block comment		It has two closing quotes. The nearest one will terminate the comment.		*/	blockComment
//This is a line comment	lineComment
0	number
1	number
10	number
2.1E-12	number
;	delim
<<	bitShift
<=	relOp
=	binaryOp
[	sLP
]	sRP
a	id
b	id
char	dt
chr	id
float	dt
if	reserved
int	dt
main	id
printf	id
return	reserved
s	id
{	cLP
}	cRP
